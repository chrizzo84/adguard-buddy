name: Performance & Lighthouse

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ '*' ]
  workflow_dispatch:

jobs:
  lighthouse:
    name: Lighthouse Performance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build

      - name: Start application
        run: |
          # Free common port in case something is left bound
          npx kill-port 3000 || true

          # Start Next.js on an ephemeral port (PORT=0). We'll detect the chosen port.
          PORT=0 ADGUARD_BUDDY_HTTP_MAX_CONCURRENCY='2' pnpm start > server.log 2>&1 &
          SERVER_PID=$!
          echo "Started pnpm start with PID=${SERVER_PID}"

          # Try to detect listening port for the started process (wait up to 30s)
          PORT_FOUND=""
          for i in $(seq 1 30); do
            # lsof output has the listening address in the 9th column like '*:3000' or '127.0.0.1:12345'
            PORT_FOUND=$(lsof -Pan -p ${SERVER_PID} -iTCP -sTCP:LISTEN -n -P 2>/dev/null | awk '{print $9}' | sed -n 's/.*:\([0-9]\+\).*/\1/p' | head -n1 || true)
            if [ -n "${PORT_FOUND}" ]; then
              echo "Detected server listening on port ${PORT_FOUND}"
              echo "APP_URL=http://localhost:${PORT_FOUND}" >> $GITHUB_ENV
              break
            fi
            sleep 1
          done

          if [ -z "${PORT_FOUND}" ]; then
            echo "Failed to detect server port. Dumping server.log for debugging..."
            tail -n 200 server.log || true
            exit 1
          fi
        env:
          # ADGUARD_BUDDY_HTTP_MAX_CONCURRENCY limits server outbound concurrency in CI
          ADGUARD_BUDDY_HTTP_MAX_CONCURRENCY: '2'

      - name: Wait for app to be ready
        run: |
          # APP_URL is set by the Start application step
          if [ -z "${APP_URL}" ]; then echo "APP_URL not set" && exit 1; fi
          timeout 60 bash -c "until curl -f ${APP_URL} > /dev/null 2>&1; do sleep 2; done"

      - name: Run Lighthouse
        uses: treosh/lighthouse-ci-action@v10
        env:
          APP_URL: ${{ env.APP_URL }}
        with:
          urls: "${{ env.APP_URL }}"
          configPath: .lighthouserc.json
          uploadArtifacts: true
          temporaryPublicStorage: true

  bundle-analysis:
    name: Bundle Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Analyze bundle
        run: |
          npx @next/bundle-analyzer --static > bundle-report.html || echo "Bundle analysis completed"
          echo "Bundle analysis report generated"

      - name: Upload bundle report
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: bundle-report.html
          retention-days: 30
